#!/usr/local/bin/python
#
#-Sun Oct 31 15:20:49 UTC 2004
# Until now only the 'inlay' stuff worked. I made the other options work too...
# Added a link to the source code.
#
#-Wed Apr  7 11:10:38 METDST 2004 -- Andre van der Vlies
#

import HTMLgen
import os
import os.path
import string
import tempfile
import Formtools
import cgi
import sys
import cgitb; cgitb.enable()

Args = cgi.FieldStorage()

PaperCDCase = "/usr/local/bin/papercdcase"
PaperDoubleCDCase = "/usr/local/bin/paperdoublecdcase"
CDInlay = "/usr/local/bin/CDInlays"

if Args.has_key('Spine'):
	words = Args["Spine"]
	if words.value:
		SpineText = words.value
	else:
		SpineText = '""'

if Args.has_key('Front'):
	words = Args["Front"]
	if words.value:
		FrontText = words.value
	else:
		FrontText = '""'

if Args.has_key('Image'):
	fileitem = Args["Image"]
	if fileitem.value:
		scratch = tempfile.mktemp()
		FrontFile = open(scratch, "wb")
		FrontFile.write(fileitem.value)
		FrontFile.close()
		Front = scratch
	else:
		Front = '""'

if Args.has_key('Inlay'):
	fileitem = Args["Inlay"]
	if fileitem.value:
		scratch2 = tempfile.mktemp()
		BackFile = open(scratch2, "wb")
		BackFile.write(fileitem.value)
		BackFile.close()
		Back = scratch2
	else:
		Back = '""'

if Args.has_key('Content'):
	fileitem = Args["Content"]
	if fileitem.value:
		scratch3 = tempfile.mktemp()
		ContentFile = open(scratch3, "wb")
		ContentFile.write(fileitem.value)
		ContentFile.close()
		Content = scratch3
	else:
		Content = '""'

if Args.has_key('DoIt'):
	if Args["DoIt"].value == "Single":
		Command = """%s --spine "%s" --image %s --text "%s" --content %s --stdout""" % (PaperCDCase,
									    SpineText,
									    Front,
									    FrontText,
									    Content)

	if Args["DoIt"].value == "Double":
		Command = """%s --image %s --text "%s" --content %s --stdout""" % (PaperDoubleCDCase,
								 Front,
								 FrontText,
								 Content)
	if Args["DoIt"].value == "Inlays":
		Command = """%s --front %s --back %s --stdout""" % (CDInlay, Front, Back)

	print "Content-Type: application/pdf"
	print
	print os.popen(Command).read()
	#print "Content-Type: text/html"
	#print
	#print Command
	#print Args

doc = HTMLgen.SimpleDocument(title='PaperCDcaseGenerator')
head = HTMLgen.Heading(1, "Still testing...", align='left')
code = HTMLgen.Href(url="http://vandervlies.xs4all.nl/~andre/PaperCDCase/", text="SourceCode")
doc.append( head )
doc.append( code )

ResetButton = HTMLgen.Input(type="submit", name='Reset', value="Clear")
FrontButton = HTMLgen.Input(type="file", name='Image', llabel="Front Image")
BackButton = HTMLgen.Input(type="file", name='Inlay', llabel="Back Image")
SpineButton = HTMLgen.Input(type="text", name='Spine', value="Enter Spinal text", size="30")
ContentButton = HTMLgen.Input(type="file", name='Content', llabel="Content File")
SingleButton = HTMLgen.Input(type="submit", name='DoIt', value="Single")
DoubleButton = HTMLgen.Input(type="submit", name='DoIt', value="Double")
CutButton = HTMLgen.Input(type="submit", name='DoIt', value="Inlays")

Navigate = HTMLgen.Form(target="_self", submit=ResetButton, enctype="multipart/form-data") 

Navigate.append( HTMLgen.BR() )
Navigate.append( HTMLgen.HR() )
Navigate.append( SpineButton )
Navigate.append( HTMLgen.BR() )
Navigate.append( HTMLgen.Textarea("Front text...", name="Front", cols="25") )
Navigate.append( HTMLgen.BR() )
Navigate.append( HTMLgen.HR() )
Navigate.append( FrontButton )
Navigate.append( HTMLgen.BR() )
Navigate.append( BackButton)
Navigate.append( HTMLgen.BR() )
Navigate.append( ContentButton)
Navigate.append( HTMLgen.BR() )
Navigate.append( HTMLgen.HR() )
Navigate.append( SingleButton )
Navigate.append( DoubleButton )
Navigate.append( CutButton )

doc.append( Navigate )

print "Content-Type: text/html"
print
#print Args
print doc
